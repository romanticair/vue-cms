{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["// 项目入口文件\r\nimport Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n//导入自己的路由模块\r\nimport router from './router.js'\r\n\r\n//导入 MUI 样式\r\nimport './lib/mui/css/mui.min.css'\r\n//导入扩展图标样式\r\nimport './lib/mui/css/icons-extra.css'\r\nimport 'mint-ui/lib/style.css'\r\n//导入 mint-ui 的 Swipe 组件\r\nimport { Header, Swipe, SwipeItem, Button, Lazyload } from 'mint-ui'\r\n//安装图片预览插件\r\nimport VuePreview from 'vue-preview'\r\n//导入能够使 *.vue 组件文件和后台数据交互的库\r\nimport VueResource from 'vue-resource'\r\n//导入 App 根组件\r\nimport app from './App.vue'\r\n//导入格式化时间的插件\r\nimport moment from 'moment'\r\n// 导入全局 vuex\r\nimport Vuex from 'vuex'\r\n\r\n//创建一个全局过滤函数\r\nVue.filter('dateFormat', function(dataStr, pattern='YYYY-MM-DD HH:mm:ss'){\r\n  return moment(dataStr).format(pattern)\r\n})\r\n\r\n// 每次刚进入网站，肯定会调用 main.js 在刚调用的时候，先从本地存储中，把购物车的数据读出来，放到 store 中\r\nlet car = JSON.parse(localStorage.getItem('car') || '[]')\r\n// 要在创建 Vuex.Sotre 对象之前\r\nVue.use(Vuex)\r\nvar store = new Vuex.Store({\r\n  state: {// this.$store.state.*\r\n    car: car // 将购物车中商品的数据，用一数组存储,在 car 数组中存储一些商品的对象，可暂时将这个商品对象设计成这个样子\r\n    // { id:商品的id, count: 要购买的数量, price: 商品的单价，selected: false  }\r\n  },\r\n  mutations: {// this.$store.commit('方法的名称', '按需传递唯一的参数')\r\n    addToCar(state, goodsinfo) {\r\n      // 点击加入购物车把商品信息保存到 store 中的 car 上\r\n      // 1. 如果购物车中，之前就已经有这个对应的商品了，那么只需要更新数量\r\n      // 2. 如果没有，则直接把商品数据，push 到 car 中即可\r\n      // 假设在购物车中，没有找到对应的商品\r\n      var flag = false\r\n      state.car.some(item => {\r\n        if (item.id == goodsinfo.id) {\r\n          item.count += parseInt(goodsinfo.count)\r\n          flag = true\r\n          return true\r\n        }\r\n      })\r\n      // 如果最终循环完毕，得到的 flag 还是 false，则把商品数据直接 push 到购物车中\r\n      if (!flag) {\r\n        state.car.push(goodsinfo)\r\n      }\r\n      // 当更新 car 之后，把 car 数组，存储到本地的 localStorage 中\r\n      localStorage.setItem('car', JSON.stringify(state.car))\r\n    },\r\n    updateGoodsInfo(state, goodsinfo) {\r\n      // 修改购物车中商品的数量值\r\n      state.car.some(item => {\r\n        if (item.id == goodsinfo.id) {\r\n          item.count = parseInt(goodsinfo.count)\r\n          return true\r\n        }\r\n      })\r\n      // 当修改完商品的数量，把最新的购物车数据，保存到本地存储中\r\n      localStorage.setItem('car', JSON.stringify(state.car))\r\n    },\r\n    removeFormCar(state, id) {\r\n      // 根据Id，从 store 中的购物车中删除对应的那条商品数据\r\n      state.car.some((item, i) => {\r\n        if (item.id == id) {\r\n          state.car.slice(i, 1)\r\n          return true\r\n        }\r\n      })\r\n      // 将删除完毕后的，最新的购物车数据，同步到本地存储中\r\n      localStorage.setItem('car', JSON.stringify(state.car))\r\n    },\r\n    updateGoodsSelected(state, info) {\r\n      state.car.some(item => {\r\n        if (item.id == info.id) {\r\n          item.selected = info.selected\r\n        }\r\n      })\r\n      // 把最新的所有购物车商品的状态保存到 store 中去\r\n      localStorage.setItem('car', JSON.stringify(state.car))\r\n    }\r\n  },\r\n  getters: {// this.$store.getters.*\r\n    // 相当于计算属性，也相当于 filters\r\n    getAllCount(state) {\r\n      var c = 0\r\n      state.car.forEach(item => {\r\n        c += item.count\r\n      })\r\n      return c\r\n    },\r\n    getGoodsCount(state) {\r\n      var o = {}\r\n      state.car.forEach(item => {\r\n        o[item.id] = item.count\r\n      })\r\n      return o\r\n    },\r\n    getGoodsSelected(state) {\r\n      var o = {}\r\n      state.car.forEach(item => {\r\n        o[item.id] = item.selected\r\n      })\r\n      return o\r\n    },\r\n    getGoodsCountAndAmount(state) {\r\n      var o = {\r\n        count: 0,// 勾选的数量\r\n        amount: 0// 勾选的总价\r\n      }\r\n      state.car.forEach(item => {\r\n        if (item.selected) {\r\n          o.count += item.count\r\n          o.amount += item.price * item.count\r\n        }\r\n      })\r\n      return o\r\n    }\r\n  }\r\n})\r\n\r\n//安装路由\r\nVue.use(VueRouter)\r\nVue.use(VuePreview)\r\n//安装库\r\nVue.use(VueResource)\r\n//设置请求的根路径\r\nVue.http.options.root = 'http://vue.studyit.io'\r\n// 全局设置 post 表单数据格式组织形式 application/x-www-form-urlencoded\r\nVue.http.emulateJSON = true\r\n//配置组件\r\nVue.component(Header.name, Header)\r\nVue.component(Swipe.name, Swipe)\r\nVue.component(SwipeItem.name, SwipeItem)\r\nVue.component(Button.name, Button)\r\nVue.use(Lazyload)\r\n\r\nlet vm = new Vue({\r\n\tel: '#app',\r\n\trender: c => c(app),\r\n\trouter,\r\n  store // 挂载 store 状态管理对象\r\n})\r\n"]}